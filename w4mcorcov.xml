<tool id="w4mcorcov" name="PLS-DA Contrasts" version="0.98.1">

  <description>PLS-DA Contrasts of Univariate Results</description>
  
  <requirements>
    <requirement type="package">r-batch</requirement>
    <requirement type="package">bioconductor-ropls</requirement>
  </requirements>
  
  <stdio>
    <exit_code range="1:" level="fatal" />
  </stdio>

  <command><![CDATA[
  Rscript $__tool_directory__/w4mcorcov_wrapper.R
  
  dataMatrix_in "$dataMatrix_in"
  sampleMetadata_in "$sampleMetadata_in"
  variableMetadata_in "$variableMetadata_in"
  tesC "$tesC"
  facC "$facC"
  levCSV '$levCSV'
  matchingC '$matchingC'
  contrast_grid '$contrast_grid'
  contrast_detail '$contrast_detail'
  contrast_corcov '$contrast_corcov'
  variableMetadata_out '$variableMetadata_out'
  ]]></command>

  <inputs>
    <param name="dataMatrix_in" label="Data matrix file" type="data" format="tabular" help="variable x sample, decimal: '.', missing: NA, mode: numerical, sep: tabular" />
    <param name="sampleMetadata_in" label="Sample metadata file" type="data" format="tabular" help="sample x metadata, decimal: '.', missing: NA, mode: character and numerical, sep: tabular" />
    <param name="variableMetadata_in" label="Variable metadata file (from Univariate)" type="data" format="tabular" help="variable x metadata, decimal: '.', missing: NA, mode: character and numerical, sep: tabular" />
    <param name="tesC" label="Test" type="select" help="Name of the statistical test - a component of column names in variable metadata table">
      <option value="ttest">ttest (qualitative, 2 levels)</option>
      <option value="wilcoxon">Wilcoxon test (qualitative, 2 levels)</option>      
      <option value="anova">Analysis of variance (qualitative, more than 2 levels)</option>
      <option value="kruskal">Kruskal-Wallis rank test (qualitative, more than 2 levels)</option>
      <option value="pearson">Pearson correlation test (quantitative)</option>
      <option value="spearman">Spearman correlation rank test (quantitative)</option>
    </param>
    <param name="facC" label="Factor of interest" type="text" help="Name of the column of the sample metadata table corresponding to the qualitative or quantitative variable"/>
    <param name="levCSV" label="Levels of interest" type="text" value = "REQUIRED - AT LEAST TWO COMMA-SEPARATED VALUES" help="comma-separated level-names (or comma-less regular expressions to match level-names) to consider in analysis; must match at least two levels; may include wild cards or regular expressions">
      <sanitizer>
        <valid initial="string.letters">
          <add preset="string.digits"/>
          <add value="&#36;"  /> <!-- $ dollar, dollar-sign -->
          <add value="&#40;"  /> <!-- ( left-paren -->
          <add value="&#41;"  /> <!-- ) right-paren -->
          <add value="&#42;"  /> <!-- * splat, asterisk -->
          <add value="&#43;"  /> <!-- + plus -->
          <add value="&#44;"  /> <!-- , comma -->
          <add value="&#46;"  /> <!-- . dot, period -->
          <add value="&#58;"  /> <!-- : colon -->
          <add value="&#59;"  /> <!-- ; semi, semicolon -->
          <add value="&#63;"  /> <!-- ? what, question mark -->
          <add value="&#91;"  /> <!-- [ l-squib, left-squre-bracket -->
          <add value="&#92;"  /> <!-- \ whack, backslash -->
          <add value="&#93;"  /> <!-- ] r-squib, right-squre-bracket -->
          <add value="&#94;"  /> <!-- ^ hat, caret -->
          <add value="&#123;" /> <!-- { l-cube, left-curly-bracket -->
          <add value="&#124;" /> <!-- | pipe -->
          <add value="&#125;" /> <!-- } r-cube, right-curly-bracket -->
        </valid>
      </sanitizer>
    </param>
    <param name="matchingC" label="Level-name matching" type="select" help="How to specify levels generically">
      <option value="none"  selected="true">do no generic matching (default)</option>
      <option value="wildcard">use wild-cards for matching level-names</option>
      <option value="regex">use regular expressions for matching level-names</option>
    </param>
  </inputs>

  <outputs>
    <!--
      pdf1: contrast grid
        * with S-PLOTs in the upper triangle
        * PLS score-plots in the lower triangle
        * with level-labels along the diagonal
    -->
    <data name="contrast_grid" label="${tool.name}_${variableMetadata_in.name}_grid" format="pdf" />
    <!--
      pdf2: summaries of each contrasts, clearly labeled by level=pair name
        * first PCA score-plot
        * then PLS score-plot
        * then PLS S-PLOT; color in red features with VIP > 1
    -->
    <data name="contrast_detail" label="${tool.name}_${variableMetadata_in.name}_detail" format="pdf" />
    <!--
      tsv1: cor and cov dataframe with colums:
        1. feature ID
        2. value1
        3. value2
        4. Wiklund\_2008 correlation
        5. Wiklund\_2008 covariance
        6. Wiklund\_2008 VIP
    -->
    <data name="contrast_corcov" label="${tool.name}_${variableMetadata_in.name}_corcov" format="tabular" />
    <!--
      tsv2: add columns to variableMetadata. For each contrast,
        1. add a `[factor]_[level'1'].[level'2']_cor` column for Wiklund\_2008 correlation
        2. add a `[factor]_[level'1'].[level'2']_cov` column for Wiklund\_2008 covariance
        3. add a `[factor]_[level'1'].[level'2']_vip` column for Wiklund\_2008 VIP
    -->
    <data name="variableMetadata_out" label="${tool.name}_${variableMetadata_in.name}_corcov" format="tabular" />
  </outputs>

  <tests>
  </tests>
  <!-- 
  .. |reg|    unicode:: U+000AE .. REGISTERED SIGN - see http://docutils.sourceforge.net/docutils/parsers/rst/include/isonum.txt or /usr/share/docutils/parsers/rst/include/isonum.txt
  -->
  <help><![CDATA[
.. |eacute| unicode:: U+000E9 .. LATIN SMALL LETTER E WITH ACUTE - see http://docutils.sourceforge.net/docutils/parsers/rst/include/isolat1.txt or /usr/share/docutils/parsers/rst/include/isolat1.txt

**Author** Arthur Eschenlauer (University of Minnesota, esch0041@umn.edu)

--------------------------------------------------------------------------



**Tool updates**

See the **NEWS** section at the bottom of this page

---------------------------------------------------

==========================================
Run PLS-DA Contrasts of Univariate Results
==========================================

-----------
Description
-----------

The W4M Univarite tool (Th\ |eacute|\ venot *et al.*, 2015) writes the results of family-wise corrected pairwise significance tests to variableMetadata.
For instance, suppose that you ran Kruskal-Wallis testing for a column named 'cluster' in sampleMetadata that has values 'k1' and 'k2', among other values; a column of variableMetadata would be labeled 'cluster_kruskal_k1.k2_sig' and would have values '1' and '0', where '1' means that there is significant evidence against the hypothesis that samples from sampleMetadata whose 'cluster' column contains 'k1' or 'k2' have the same mean intensity for a given feature.

The 'PLS-DA Contrasts' tool produces graphics and data for OPLS-DA\ :superscript:`速` contrasts of feature-intensities between significantly different pairs of factor-levels.  For each pair-wise contrast, it omits features that are not significantly different.

-----------------
Workflow Position
-----------------

- Upstream tool category: Univariate (Statistical Analysis)
- Downstream tool categories: Statistical Analysis

----------
Motivation
----------

OPLS-DA\ :superscript:`速`, generally, and the SIMCA\ :superscript:`速` S-PLOT\ :superscript:`速` (Wiklund *et al.*, 2008), in particular, are employed (e.g. in Sun *et al.*, 2016) to identify features that are potiential biomarkers, i.e. features that are potentially useful to discriminate to which of two classes a sample should be assigned.  Workflow4Metabolomics (W4M) version (Giacomoni *et al.*, 2014, Guitton *et al.*, 2017) does not (as of release 3.0) include a tool for making an S-PLOT (or equivalent).

The S-PLOT is computed from mean-centered, pareto-scaled data.  This plot presents the correlation of the first score vector from an OPLS-DA model with the sample-variables used to produce that model versus the covariance of the scores with the sample-variables.  For OPLS-DA, the first score vector represents the variation among the sample-variables that is explained by the contrasting factor.

The principal aims of this tool are:

- To compute multiple contrasts with OPLS-DA and the covariance vs. correlation plot.
- To visualize multiple contrasts compactly yet informatively.
- To write the results to data files for use in further multivariate analysis or visualization.

-----------
Input files
-----------

+----------------------+------------+
| File                 |   Format   |
+======================+============+
| Data matrix          |   tabular  |
+----------------------+------------+
| Sample metadata      |   tabular  |
+----------------------+------------+
| Variable metadata    |   tabular  |
+----------------------+------------+

------------
Output files
------------

+----------------------+------------+
| File                 |   Format   |
+======================+============+
| Contrast grid        |     pdf    |
+----------------------+------------+
| Contrast detail      |     pdf    |
+----------------------+------------+
| Contrast cor and cov |   tabular  |
+----------------------+------------+
| Variable metadata    |   tabular  |
+----------------------+------------+

----------
Parameters
----------

[IN] Data matrix file
	| variable x sample **dataMatrix** (tabular separated values) file of the numeric data matrix, with . as decimal, and NA for missing values; the table must not contain metadata apart from row and column names; the row and column names must be identical to the rownames of the sample and variable metadata, respectively (see below)
	|

[IN] Sample metadata file
	| sample x metadata **sampleMetadata** (tabular separated values) file of the numeric and/or character sample metadata, with . as decimal and NA for missing values
	|

[IN] Variable metadata file
	| variable x metadata **variableMetadata** (tabular separated values) file of the numeric and/or character variable metadata, with . as decimal and NA for missing values
	|

[IN] Test
	| Name of the statistical test - a component of column names in variable metadata table
	| May be one of 'ttest', 'gwilcoxon, anova, kruskal, pearson, spearman'
	|

[IN] Factor of interest
	| Name of the column of the sample metadata table corresponding to the qualitative or quantitative variable
	|

[IN] Levels of interest
	| comma-separated level-names (or comma-less regular expressions to match level-names) to consider in analysis; must match at least two levels; may include wild cards or regular expressions
	|

[IN] Level-name matching
	| How to specify levels generically - wild cards, regular expressions, or none (no generic matching)
	|

[OUT] Contrast-grid output PDF
	| An output file displaying on a single figure, for each pair of selected level-names, the OPLS-DA scores plot and the correlation-vs.-covariance plot (a work-alike for the SIMCA S-PLOT) 
	|

[OUT] Contrast-detail output PDF
	| An output file having, for each pair of selected level-names, the PCA score-plot for the first two scores, the OPLS-DA score-plot for the first two scores, and the OPLS-DA correlation-vs.-covariance plot (a work-alike for the S-PLOT)
	|

[OUT] Contrast Correlation-Covarinace data TABULAR
	| A tab-separated values file having the following columns

- feature ID
- level-name 1
- level-name 2
- correlation (from Supplement to Wiklund, *op. cit.*)
- covariance (from Supplement to Wiklund, *op. cit.*)
- variable importance in projection (VIP, from Th\ |eacute|\ venot, *op. cit.*)


[OUT] Variable metadata TABULAR
	| The VariableMetadata input file with the following columns added for each pair of levels:

- a ``[factor]_[level'1'].[level'2']_cor`` column for Wiklund (*op. cit.*) correlation
- a ``[factor]_[level'1'].[level'2']_cov`` column for Wiklund (*op. cit.*) covariance
- a ``[factor]_[level'1'].[level'2']_vip`` column for Th\ |eacute|\ venot (*op. cit.*) VIP



---------------------------------------
Wild card patterns to match level-names
---------------------------------------

"wild card" patterns may be used to select level-names.

- use '``?``' to match a single character
- use '``*``' to match zero or more characters
- the entire pattern must match the level name

For example

- '``??.leve*``' matches '``my.level``' but not '``my.own.level``'
- '``*.level``' matches '``my.level``' and '``my.own.level``'
- '``*.level``' matches neither '``my.level``' nor '``my.own.level``'

------------------------------------------------
Regular expression patterns to match level-names
------------------------------------------------

"regular expression" patterns may be used to select level-names.

POSIX 1003.2 standard regular expressions allow precise pattern-matching and are exhaustively defined at:
http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap09.html

However, only a few basic building blocks of regular expressions need to be mastered for most cases:

- '``^``' matches the beginning of a level-name
- '``$``' matches the end of a level-name
- '``.``' outside of square brackets matches a single character
- '``*``' matches character specified immediately before zero or more times
- square brackets specify a set of characters to be matched.

Within square brackets

- '``^``' as the first character specifies that the list of characters are those that should **not** be matched.
- '``-``' is used to specify ranges of characters

Caveat: The tool wrapper uses the comma ('``,``') to split a list of sample-level names, so **commas may not be used within regular expressions for this tool**

First Example: Consider a field of level-names consisting of '``marq3,marq6,marq9,marq12,front3,front6,front9,front12``'

- The regular expression '``^front[0-9][0-9]*$``' will match the same sample-levels as '``front3,front6,front9,front12``'
- The regular expression '``^[a-z][a-z]3$``' will match the same sample-levels as '``front3,marq3``'
- The regular expression '``^[a-z][a-z]12$``' will match the same sample-levels as '``front12,marq12``'
- The regular expression '``^[a-z][a-z][0-9]$``' will match the same sample-levels as '``front3,front6,front9,marq3,marq6,marq9``'

Second Example: Consider these regular expression patterns as possible matches to a sample-level name '``AB0123``':

- '``^[A-Z][A-Z][0-9][0-9]*$``' - MATCHES '``**^AB0123$**``'
- '``^[A-Z][A-Z]*[0-9][0-9]*$``' - MATCHES '``**^AB0123$**``'
- '``^[A-Z][0-9]*``' - MATCHES  '``**^A** B0123$``' - first character is a letter, '``*``' can specify zero characters, and end of line did not need to be matched.
- '``^[A-Z][A-Z][0-9]``' - MATCHES  '``**^AB0** 123$``' - first two characters are letters aind the third is a digit.
- '``^[A-Z][A-Z]*[0-9][0-9]$``' - NO MATCH - the name does not end with the pattern '``[A-Z][0-9][0-9]$``', i.e., it ends with four digits, not two.
- '``^[A-Z][0-9]*$``' - NO MATCH - the pattern specifies that second character and all those that follow, if present, must be digits.

----------
Trademarks
----------

OPLS-DA\ :superscript:`速`, SIMCA\ :superscript:`速`, and S-PLOT\ :superscript:`速` are registered trademarks of the Umetrics company.  http://umetrics.com/about-us/trademarks


  ]]></help>
  <citations>
    <!-- Giacomoni_2014 W4M 2.5 -->
    <citation type="doi">10.1093/bioinformatics/btu813</citation>
    <!-- Guitton_2017 W4M 3.0 -->
    <citation type="doi">10.1016/j.biocel.2017.07.002</citation>
    <!-- Sun_2016 Urinary Biomarkers for adolescent idiopathic scoliosis -->
    <citation type="doi">10.1038/srep22274</citation>
    <!-- Th_venot_2015 Urinary metabolome statistics -->
    <citation type="doi">10.1021/acs.jproteome.5b00354</citation>
    <!-- Wiklund_2008 OPLS PLS-DA and S-PLOT -->
    <citation type="doi">10.1021/ac0713510</citation>
  </citations>
  <!--
     vim:noet:sw=4:ts=4
-->
</tool>
